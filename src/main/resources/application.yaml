spring:
  application:
    name: video-streaming
  servlet:
    multipart:
      max-file-size: 10000MB
      max-request-size: 10000MB
  kafka:
    bootstrap-servers: localhost:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        acks: 1
        spring:
          json:
            add:
              type:
                headers: false
file:
  metadata: localhost:9098

topic:
  send-order: video-streaming

  main:
    allow-bean-definition-overriding: true
photon:
  streaming:
    default-chunk-size: 1000 #value in bytes



minio: #when changing these three connection properties below, don't forget first to change properties in docker-compose file in {project-root}/docker/docker-compose.yaml
  url: http://localhost:9000
  username: admin
  password: adminpass
  put-object-part-size: 5242880 #value in bytes (minimum is 5 MB equivalent)
server:
  port: 0



eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8787/eureka}
  instance:
    preferIpAddress: true


